#i had a few issues reading in the data, which is why it is done in 3 parts

library(tidyverse)
library(ggplot2)
library(plotly)

# Data for each column
Datum <- c("18.12.2024", "17.12.2024", "17.12.2024", "10.12.2024", "04.12.2024", 
           "04.12.2024", "03.12.2024", "26.11.2024", "26.11.2024", "13.11.2024",
           "05.11.2024", "29.10.2024", "28.10.2024", "15.10.2024", "08.10.2024", 
           "22.09.2024", "22.09.2024", "18.09.2024", "17.09.2024", "17.09.2024", 
           "11.09.2024", "10.09.2024", "09.09.2024", "06.09.2024", "04.09.2024",
           "04.09.2024", "03.09.2024", "27.08.2024", "26.08.2024", "22.08.2024", 
           "20.08.2024", "18.08.2024", "07.08.2024", "06.08.2024", "26.07.2024", 
           "24.07.2024", "21.07.2024", "12.07.2024", "11.07.2024", "10.07.2024", 
           "26.06.2024", "25.06.2024", "19.06.2024", "11.06.2024", "11.06.2024", 
           "28.05.2024", "24.05.2024", "21.05.2024", "17.05.2024", "16.05.2024", 
           "07.05.2024", "29.04.2024", "25.04.2024", "25.04.2024", "24.04.2024", 
           "10.04.2024", "10.04.2024", "21.03.2024", "20.03.2024", "15.03.2024", 
           "14.03.2024", "13.03.2024", "06.03.2024", "05.03.2024", "29.02.2024", 
           "28.02.2024", "21.02.2024", "14.02.2024", "07.02.2024", "07.02.2024", 
           "28.01.2024", "24.01.2024", "24.01.2024", "24.01.2024", "22.01.2024", 
           "17.01.2024", "12.01.2024", "10.01.2024", "10.01.2024", "03.01.2024")

FPÖ <- c(37, 35, 36, 36, 35, 34, 35, 32, 33, 32, 34, 33, 32, 32, 33, 27, 26, 26, 27, 
         27, 28, 28, 27, 27, 27, 28, 27, 28, 27, 28, 29, 26, 26, 31, 30, 27, 27, 26, 
         30, 31, 32, 27, 30, 29, 28, 29, 28, 27, 31, 28, 31, 27, 27, 28, 29, 30, 29, 
         28, 30, 27, 29, 26, 29, 30, 28, 30, 28, 29, 30, 31, 30, 28, 28, 28)

ÖVP <- c(21, 22, 20, 21, 20, 21, 20, 24, 21, 22, 23, 21, 21, 25, 26, 25, 25, 25, 24, 
         25, 25, 24, 25, 23, 24, 23, 24, 23, 22, 21, 20, 22, 22, 21, 20, 21, 23, 22, 
         22, 22, 22, 22, 21, 21, 21, 20, 20, 21, 22, 23, 22, 22, 23, 22, 20, 21, 23, 
         22, 22, 23, 21, 23, 20, 23, 22, 21, 21, 23, 22, 21, 23, 22, 21)

SPÖ <- c(20, 20, 19, 19, 21, 20, 19, 20, 19, 21, 21, 19, 21, 19, 19, 20, 20, 21, 21, 
         20, 21, 21, 20, 20, 21, 21, 21, 21, 22, 21, 20, 19, 21, 21, 21, 21, 23, 24, 
         22, 22, 22, 20, 21, 22, 22, 21, 21, 21, 23, 22, 22, 22, 23, 22, 23, 22, 23, 
         23, 21, 21, 23, 23, 22, 22, 22, 22, 23, 22, 23, 24, 21)

NEOS <- c(10, 10, 10, 10, 12, 9, 11, 12, 11, 9, 9, 10, 11, 10, 10, 11, 12, 12, 11, 
          11, 10, 9, 10, 9, 10, 9, 9, 9, 10, 9, 9, 9, 9, 9, 8, 10, 8, 9, 8, 10, 9, 
          9, 9, 9, 10, 8, 9, 9, 8, 10, 9, 9, 10, 8, 8, 9, 9, 9, 10, 10, 9, 10, 9)

GRÜNE <- c(8, 8, 8, 8, 8, 8, 8, 7, 8, 8, 8, 8, 8, 8, 7, 9, 9, 8, 8, 9, 7, 8, 7, 
           7, 9, 8, 8, 8, 9, 8, 8, 8, 9, 7, 8, 9, 9, 7, 9, 8, 8, 7, 8, 8, 8, 8, 
           8, 8, 9, 8, 9, 8, 8, 7, 8, 8, 9, 8, 8, 8, 9, 8, 9, 8, 9, 9)

KPÖ <- c(3, 3, 3, 3, 2, 3, 3, 4, 4, 2, 3, 4, 3, 3, 2, 3, 4, 4, 3, 3, 3, 3, 3, 3, 
         3, 3, 3, 4, 3, 3, 2, 3, 2, 3, 3, 3, 2, 3, 2, 2, 2, 2, 2, 4, 3, 3, 3, 
         3, 2, 3, 3, 2, 3, 3, 3, 2, 3, 2, 2, 3, 3, 2, 2, 2, 3, 3, 3)


# Check the length of each vector
length(Datum)
length(FPÖ)
length(ÖVP)
length(SPÖ)
length(NEOS)
length(GRÜNE)
length(KPÖ)

# If you see different lengths, you can either:
# 1. Trim the longer vectors to the length of the shortest one
# 2. Pad the shorter vectors with NAs to match the length of the longest vector

# Example: Trim all vectors to the length of the shortest vector (if desired)
min_length <- min(length(Datum), length(FPÖ), length(ÖVP), length(SPÖ), 
                  length(NEOS), length(GRÜNE), length(KPÖ))

Datum <- Datum[1:min_length]
FPÖ <- FPÖ[1:min_length]
ÖVP <- ÖVP[1:min_length]
SPÖ <- SPÖ[1:min_length]
NEOS <- NEOS[1:min_length]
GRÜNE <- GRÜNE[1:min_length]
KPÖ <- KPÖ[1:min_length]
# Create data frame
df <- data.frame(Datum, FPÖ, ÖVP, SPÖ, NEOS, GRÜNE, KPÖ)

# View the result
head(df)


# Define the data for polling percentages for df3
Datum <- c("06.03.2024", "05.03.2024", "29.02.2024", "28.02.2024", "21.02.2024", "14.02.2024", "07.02.2024", "07.02.2024", 
           "28.01.2024", "24.01.2024", "24.01.2024", "24.01.2024", "22.01.2024", "17.01.2024", "12.01.2024", "10.01.2024", "03.01.2024")
FPÖ <- c(26, 31, 30, 26, 26, 27, 28, 28, 28, 28, 31, 26, 26, 26, 29, 27, 30)
SPÖ <- c(23, 22, 22, 23, 23, 22, 21, 21, 23, 23, 22, 23, 23, 24, 25, 24, 25)
ÖVP <- c(21, 22, 21, 21, 20, 20, 21, 21, 23, 22, 21, 22, 22, 23, 21, 21, 21)
NEOS <- c(12, 8, 8, 11, 10, 11, 12, 12, 9, 12, 9, 10, 10, 11, 10, 12, 9)
GRÜNE <- c(8, 9, 8, 9, 10, 9, 8, 8, 9, 8, 9, 9, 9, 10, 10, 10, 9)
KPÖ <- c(3, 3, 3, 3, 3, 3, 3, 3, 2, 3, 4, 2, 3, 3, 2, 3, 3)

# Create the data frame df3 without "_3" suffix
df3 <- data.frame(Datum, FPÖ, SPÖ, ÖVP, NEOS, GRÜNE, KPÖ)

# View the result
head(df3)








# Create the data for polling percentages

Datum <- c("20.12.2023", "13.12.2023", "06.12.2023", "29.11.2023", "23.11.2023", "22.11.2023",
           "16.11.2023", "09.11.2023", "08.11.2023", "02.11.2023", "30.10.2023", "25.10.2023",
           "19.10.2023", "18.10.2023", "12.10.2023", "11.10.2023", "05.10.2023", "04.10.2023", 
           "27.09.2023", "20.09.2023", "20.09.2023", "14.09.2023", "14.09.2023", "07.09.2023", 
           "01.09.2023", "30.08.2023", "08.08.2023", "03.08.2023", "20.07.2023", "06.07.2023", 
           "05.07.2023", "29.06.2023", "29.06.2023", "28.06.2023", "22.06.2023", "22.06.2023", 
           "21.06.2023", "15.06.2023", "14.06.2023", "07.06.2023", "07.06.2023", "07.06.2023", 
           "24.05.2023", "18.05.2023", "16.05.2023", "16.05.2023", "11.05.2023", "10.05.2023", 
           "04.05.2023", "04.05.2023", "03.05.2023", "01.05.2023", "27.04.2023", "26.04.2023", 
           "26.04.2023", "19.04.2023", "13.04.2023", "12.04.2023", "06.04.2023", "23.03.2023", 
           "23.03.2023", "23.03.2023", "22.03.2023", "15.03.2023", "09.03.2023", "09.03.2023", 
           "01.03.2023", "01.03.2023", "22.02.2023", "21.02.2023", "16.02.2023", "16.02.2023", 
           "15.02.2023", "09.02.2023", "08.02.2023", "01.02.2023", "25.01.2023", "19.01.2023", 
           "18.01.2023", "18.01.2023", "11.01.2023", "05.01.2023", "04.01.2023")
FPÖ <- c(30, 30, 30, 32, 30, 29, 29, 32, 29, 29, 30, 29, 29, 29, 32, 30, 29, 29, 29, 29, 28, 29, 29, 29, 30, 30, 32, 27, 28, 32, 28, 28, 28, 29, 28, 30, 28, 30, 29, 30, 29, 28, 27, 28, 27, 28, 29, 30, 29, 28, 27, 30, 29, 29, 29, 28, 29, 29, 30, 27, 28, 27, 29, 29, 29, 30, 28, 28, 28, 28, 28, 29, 29, 28, 29, 28, 28, 29, 27, 29)
  SPÖ <- c(25, 24, 23, 22, 24, 26, 25, 23, 25, 23, 24, 24, 24, 24, 21, 25, 24, 23, 25, 24, 25, 25, 23, 24, 23, 23, 21, 25, 23, 25, 23, 25, 25, 24, 23, 24, 23, 24, 22, 21, 25, 23, 25, 25, 25, 25, 25, 24, 24, 24, 25, 23, 25, 25, 25, 24, 24, 24, 24, 23, 22, 21, 25, 25, 24, 25, 23, 24, 25, 23, 24, 25, 23, 24, 25, 24, 23, 24, 25, 24, 23)
  ÖVP <- c(21, 21, 20, 22, 20, 20, 23, 22, 20, 21, 20, 20, 21, 21, 22, 21, 21, 20, 20, 21, 22, 22, 21, 21, 20, 20, 23, 22, 21, 21, 21, 20, 21, 20, 22, 21, 23, 22, 23, 23, 21, 21, 20, 22, 21, 22, 22, 21, 21, 22, 21, 22, 21, 21, 21, 22, 22, 22, 21, 21, 21, 20, 22, 21, 22, 21, 21, 22, 23, 23, 20, 23, 21, 23, 22, 22, 23, 21, 21)
  NEOS <- c(9, 10, 10, 9, 11, 10, 9, 10, 10, 10, 11, 12, 10, 9, 9, 10, 11, 10, 9, 11, 10, 10, 10, 10, 10, 9, 9, 11, 10, 9, 9, 10, 9, 10, 11, 10, 10, 9, 9, 9, 10, 10, 10, 10, 10, 11, 10, 9, 10, 9, 11, 9, 11, 10, 10, 10, 9, 9, 9, 9, 9, 9, 10, 9, 10, 9, 9, 10, 9, 9, 9, 9, 9, 9, 10, 10, 9, 10, 9, 9)
  GRÜNE <- c(9, 9, 10, 9, 8, 9, 8, 9, 9, 9, 8, 9, 9, 9, 10, 9, 8, 9, 9, 9, 9, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 8, 9, 9, 9, 9, 10, 10, 9, 9, 9, 9, 9, 10, 9, 10, 9, 9, 8, 9, 10, 9, 9, 9, 9, 8, 9, 9, 9, 8, 9, 9, 9, 9, 9, 9, 9, 9, 8, 10, 9, 10, 9, 9, 9, 9, 9, 10, 9, 9, 10)
  KPÖ <- c(3, 3, 3, 4, 3, 4, 3, 4, 3, 3, 3, 3, 3, 4, 4, 3, 3, 4, 3, 4, 4, 3, 4, 3, 3, 4, 4, 3, 4, 4, 3, 3, 3, 4, 3, 4, 3, 3, 3, 3, 4, 3, 4, 3, 3, 4, 3, 3, 4, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4, 3, 3, 4, 3, 3, 4, 3, 3, 3, 4, 3, 3, 4, 3, 3, 4, 3, 3, 4, 3, 3, 3)



# Check the length of each vector
length(Datum)
length(FPÖ)
length(ÖVP)
length(SPÖ)
length(NEOS)
length(GRÜNE)
length(KPÖ)


# Example: Trim all vectors to the length of the shortest vector (if desired)
min_length <- min(length(Datum), length(FPÖ), length(ÖVP), length(SPÖ), 
                  length(NEOS), length(GRÜNE), length(KPÖ))

Datum <- Datum[1:min_length]
FPÖ <- FPÖ[1:min_length]
ÖVP <- ÖVP[1:min_length]
SPÖ <- SPÖ[1:min_length]
NEOS <- NEOS[1:min_length]
GRÜNE <- GRÜNE[1:min_length]
KPÖ <- KPÖ[1:min_length]


# Create data frame
df2 <- data.frame(Datum, FPÖ, ÖVP, SPÖ, NEOS, GRÜNE, KPÖ)

# View the result
head(df2)




# Merge the data frames by appending `data` below `df`
merged_df <- rbind(df, df2, df3)

# View the result
head(merged_df)






# Define the color mapping for each party using the Rob color palette
party_colors <- c(
  "SPÖ" = "#FF0000",          # Red
  "ÖVP" = "#63C3D0",          # Light Blue (HEX)
  "FPÖ" = "#0066FF",          # Blue (HEX)
  "GRÜNE" = "#92D050",        # Green (HEX)
  "NEOS" = "#E84388",         # Pink (HEX)
  "PILZ" = "#FFFFFF",         # White (HEX)
  "GILT" = "#FFFFFF",         # White (HEX)
  "FLÖ" = "#0033CC",          # Blue (HEX)
  "KPÖ" = "#FF0000"           # Red (HEX) - Same as SPÖ for now
)

# Reshape the data from wide to long format
merged_df <- merged_df %>%
  gather(key = "Party", value = "Percentage", -Datum)



# Create the line plot
ggplot(merged_df, aes(x = as.Date(Datum, format = "%d.%m.%Y"), y = Percentage, color = Party, group = Party)) +
  geom_line(size = 0.5) +
  scale_color_manual(values = party_colors) +  # Apply the color mapping
  labs(title = "Political Party Percentages Over Time",
       x = "Date",
       y = "Percentage",
       color = "Party") +
  theme_minimal() + 
  theme(axis.text.x = element_text(angle = 45, hjust = 1))




library(ggplot2)
library(camcorder)

gg_record(
  dir = 'img',
  device = 'png',
  width = 60,
  height = 40,
  units = 'cm'
)


# Create the line plot with enhanced aesthetics
ggplot(merged_df, aes(x = as.Date(Datum, format = "%d.%m.%Y"), y = Percentage, color = Party, group = Party)) +
  geom_line(size = 1.2) +  # Thicker lines for better visibility
  geom_point(size = 1.5, shape = 16) +  # Points on the lines
  scale_color_manual(values = party_colors) +  # Apply the custom color mapping
  labs(
    title = "Political Party Percentages Over Time",
    subtitle = "Data from various opinion polls conducted in 2023 and 2024",
    x = "Date",
    y = "Percentage (%)",
    color = "Party"
  ) +
  theme_minimal(base_size = 15) +  # Use a clean, minimal theme with larger font
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),  # Rotated x-axis labels
    axis.title = element_text(size = 16, face = "bold"),  # Bold axis titles
    axis.text = element_text(size = 12),  # Adjust axis text size
    legend.title = element_text(size = 14, face = "bold"),  # Bold legend title
    legend.text = element_text(size = 12),  # Adjust legend text size
    plot.title = element_text(size = 18, face = "bold"),  # Bold title
    plot.subtitle = element_text(size = 14),  # Subtitle size
    panel.grid.major = element_line(color = "gray90", size = 0.5),  # Subtle major grid lines
    panel.grid.minor = element_line(color = "gray95", size = 0.2),  # Minor grid lines for a clean look
    panel.grid = element_blank(),  # Remove grid lines for a more modern look
    plot.margin = margin(20, 20, 20, 20)  # Add padding around the plot
  ) +
  scale_x_date(
    breaks = "1 month",  # Date breaks every month
    date_labels = "%b %Y"  # Display months and years
  )





library(ggplot2)
library(plotly)
library(dplyr)

# Assuming you already have merged_df and party_colors

# Create the ggplot object
p <- ggplot(merged_df, aes(x = as.Date(Datum, format = "%d.%m.%Y"), 
                           y = Percentage, color = Party, group = Party, 
                           text = paste("Party: ", Party, "<br>Date: ", Datum, "<br>Percentage: ", Percentage, "%"))) +
  # Smooth the line with a less extreme smoothing effect
  geom_smooth(method = "loess", size = 0.8, se = FALSE, span = 0.15) +  # Adjust span for less smoothing
  # Keep the original points
  geom_point(size = 2, shape = 16) +  # Larger points for emphasis
  scale_color_manual(values = party_colors) +  # Apply custom color mapping
  labs(
    title = "FPÖ on the Rise: Election Polls for the Austrian National Council: Trends from 2023 to 2024",
    subtitle = "Polling data from the FPÖ party during 2023 and 2024",
    x = "Date",
    y = "Percentage (%)",
    color = "Party",
    caption = "Source: Fragrance Dataset\nAuthor:@irgendeine_lea\n#TidyTuesday W1 2025"  # Adding caption
  ) + 
  theme_minimal(base_size = 16) +  # Use minimal theme with larger base font size
  theme(
    plot.background = element_rect(fill = "#2E2E2E", color = NA),  # Dark background
    panel.background = element_rect(fill = "#333333", color = NA),  # Slightly lighter panel background
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 14, color = "white"),  # Rotated x-axis labels in white
    axis.text.y = element_text(size = 12, color = "white"),  # Y-axis text in white
    axis.title = element_text(size = 16, color = "white"),  # Axis titles in white
    plot.title = element_text(size = 20, face = "bold", color = "white", hjust = 0.5, vjust = 2),  # Bold title, centered, increased spacing
    plot.subtitle = element_text(size = 16, color = "white", hjust = 0.5, vjust = 0.5),  # Subtitle centered with adjusted vertical spacing
    plot.caption = element_text(size = 12, color = "white", hjust = 0.5, vjust = 1.5),  # Caption centered and spaced
    legend.title = element_text(size = 14, color = "white"),  # Legend title in white
    legend.text = element_text(size = 12, color = "white"),  # Legend text in white
    legend.position = "bottom",  # Position the legend at the bottom
    legend.justification = "center",  # Center the legend horizontally
    panel.grid = element_line(color = "#555555", size = 0.3),  # Light gray grid lines for contrast
    plot.margin = margin(50, 40, 50, 40)  # Adjust plot margins for more space (top, left, bottom)
  ) + 
  scale_x_date(
    breaks = "1 month",  # Date breaks every month
    date_labels = "%b %Y"  # Display months and years
  )

# Convert ggplot to interactive plot with fixed size (using ggplotly() for width/height)
interactive_plot <- ggplotly(p, tooltip = "text", width = 1600, height = 1300)

# Show the plot
interactive_plot


